{"version":3,"sources":["src/app.coffee"],"names":[],"mappings":"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","file":"src/app.js","sourceRoot":"/source/","sourcesContent":["#TODO (S.Panfilov) may be instead of @ at addListener func, we should set sprite\nclass AccelerometerHelper\n    isAccelerometerExist: ->\n        cc.sys.capabilities.hasOwnProperty 'accelerometer'\n    enabledAccelerometer: ->\n        cc.inputManager.setAccelerometerEnabled true\n    disabledAccelerometer: ->\n        cc.inputManager.setAccelerometerEnabled false\n    isAccelerometerEnabled: ->\n        cc.Device.isAccelerometerEnabled\n    addAccelerometerListener: ->\n        cc.eventManager.addListener\n            event: cc.EventListener.ACCELERATION\n            callback: (acc, event) ->\n                cc.log \"Accelerometer feel smth!\"\n        , @\nclass DisplayHelper\n    RESOLUTIONS:\n        iPadRetina:\n            large: 2048\n            small: 1536\n        iPad:\n            large: 1024\n            small: 768\n        iPhoneSixPlus:\n            large: 2208\n            small: 1242\n        iPhoneSix:\n            large: 1334\n            small: 750\n        iPhoneFive:\n            large: 1136\n            small: 640\n    isNative: cc.sys.isNative\n    getDisplayWidth: ->\n        cc.view.getFrameSize().width\n    getDisplayHeight: ->\n        cc.view.getFrameSize().height\n    isResolution: (width, height) ->\n        (@width is width) and (@height is height)\n    isIPadRetina: ->\n        isPortrait = @isResolution @RESOLUTIONS.iPadRetina.large @RESOLUTIONS.iPadRetina.small\n        isLandscape = @isResolution @RESOLUTIONS.iPadRetina.small @RESOLUTIONS.iPadRetina.large\n        (isPortrait or isLandscape) and @isNative\n    isIPad: ->\n        isPortrait = @isResolution @RESOLUTIONS.iPad.large @RESOLUTIONS.iPad.small\n        isLandscape = @isResolution @RESOLUTIONS.iPad.small @RESOLUTIONS.iPad.large\n        (isPortrait or isLandscape) and @isNative\n    isIPhoneSixPlus: ->\n        isPortrait = @isResolution @RESOLUTIONS.iPhoneSixPlus.large @RESOLUTIONS.iPhoneSixPlus.small\n        isLandscape = @isResolution @RESOLUTIONS.iPhoneSixPlus.small @RESOLUTIONS.iPhoneSixPlus.large\n        (isPortrait or isLandscape) and @isNative\n    isIPhoneSix: ->\n        isPortrait = @isResolution @RESOLUTIONS.iPhoneSix.large @RESOLUTIONS.iPhoneSix.small\n        isLandscape = @isResolution @RESOLUTIONS.iPhoneSix.small @RESOLUTIONS.iPhoneSix.large\n        (isPortrait or isLandscape) and @isNative\n    isIPhoneFive: ->\n        isPortrait = @isResolution @RESOLUTIONS.iPhoneFive.large @RESOLUTIONS.iPhoneFive.small\n        isLandscape = @isResolution @RESOLUTIONS.iPhoneFive.small @RESOLUTIONS.iPhoneFive.large\n        (isPortrait or isLandscape) and @isNative\n    isLandscape: ->\n        #TODO (S.Panfilov)\n    isPortrait: ->\n        !@isLandscape()\nclass EventsUtils\n    #TODO (S.Panfilov) the idea is to push listeners here when create it (in utils, helpers, etc.)\n    listeners: []\n    addListener: (listenerConfig, nodeOrPriority) ->\n        cc.eventManager.addListener listenerConfig, nodeOrPriority\n    removeAllListeners: ->\n        cc.eventManager.removeAllListeners()\n    removeListener: (listener) ->\n        cc.eventManager.removeListener listener\n    removeListenersForObject: (object) ->\n        cc.eventManager.removeListeners object\n    removeListenersByType: (type) ->\n        cc.eventManager.removeListeners type\n    pause: (layer, isRecursive)->\n        cc.eventManager.pauseTarget layer, isRecursive\n    resume: (layer, isRecursive)->\n        cc.eventManager.resumeTarget layer, isRecursive\nclass HexUtils\n\n    _drawHex = (drawNode, hex) ->\n        drawNode.drawPoly hex.corners, cc.color(255, 255, 255), 1, cc.color(0, 0, 255)\n        drawNode\n\n    _isEven = (number) ->\n        (number % 2 is 0)\n\n    hexes: {}\n    hexesConfig:\n        type: 'Pointy topped'\n        coordinateSystem: 'Axial'\n        startFrom: 'Left-top'\n        cornersCount: 6\n    setHexesConfig: (size) ->\n        @hexesConfig.hexSize = size\n        @hexesConfig.hexHeight = size * 2\n        @hexesConfig.hexWidth = Math.sqrt(3) / 2 * @hexesConfig.hexHeight\n        @hexesConfig.horizontalDistance = @hexesConfig.hexWidth\n        @hexesConfig.verticalDistance = (3 / 4) * @hexesConfig.hexHeight\n    convertCubeToAxial: (x, z) ->\n        q: x\n        r: z\n    convertAxialToCube: (q, r) ->\n        x: q\n        z: r\n        y: (-x) - z\n    calculateHex: (centerX, centerY) ->\n        hex =\n            centerX: centerX\n            centerY: centerY\n            corners: []\n\n        for i in [0...@hexesConfig.cornersCount]\n            angle = 2 * Math.PI / @hexesConfig.cornersCount * (i + 0.5)\n            hex.corners.push\n                x: centerX + @hexesConfig.hexSize * Math.cos angle\n                y: centerY + @hexesConfig.hexSize * Math.sin angle\n        hex\n    generateHexesGrid: (centerX, centerY, widthHexCount, heightHexCount) ->\n        @hexes = []\n        hexesCount = widthHexCount * heightHexCount\n        for i in [0...hexesCount]\n            hex = {}\n            offset = @getOffsetForHex centerX, centerY, widthHexCount, heightHexCount, i\n            hex = @calculateHex offset.x, offset.y\n            axial = @getAxialCoords widthHexCount, heightHexCount, i\n            hex.q = axial.q\n            hex.r = axial.r\n            hex.id = ObjectsUtils::getCustomPostfixId \"#{hex.q}-#{hex.r}\"\n            hex.alias = \"HEX_#{hex.q}-#{hex.r}\"\n            @hexes[hex.alias] = hex\n        @hexes\n    getOffsetForHex: (centerX, centerY, widthHexCount, heightHexCount, hexNumber) ->\n        horizontalDistance = @hexesConfig.horizontalDistance\n        verticalDistance = @hexesConfig.verticalDistance\n        rowNumber = Math.floor(hexNumber / widthHexCount)\n        isFirstHexInRow = Math.floor(hexNumber / widthHexCount) is hexNumber / widthHexCount\n        result = {}\n\n        if hexNumber is 0\n            result.x = centerX\n            result.y = centerY\n        else if hexNumber < widthHexCount\n            result.x = centerX + (horizontalDistance * hexNumber)\n            result.y = centerY\n        else if hexNumber >= widthHexCount\n            if _isEven rowNumber\n                if isFirstHexInRow\n                    result.x = centerX\n                else\n                    result.x = centerX + ((horizontalDistance) * (hexNumber - (widthHexCount * rowNumber)))\n            else\n                if isFirstHexInRow\n                    result.x = centerX - (horizontalDistance / 2)\n                else\n                    result.x = centerX - (horizontalDistance / 2) + ((horizontalDistance) * (hexNumber - (widthHexCount * rowNumber)))\n            result.y = centerY - (verticalDistance * rowNumber)\n\n        result\n    getAxialCoords: (widthHexCount, heightHexCount, hexNumber) ->\n        result = {}\n        if hexNumber is 0\n            result.q = 0\n            result.r = 0\n        else if hexNumber < widthHexCount\n            result.q = hexNumber\n            result.r = 0\n        else if hexNumber is widthHexCount\n            result.q = 0\n            result.r = 1\n        else if hexNumber > widthHexCount\n            r = Math.floor(hexNumber / widthHexCount)\n            result.q = hexNumber - (r * widthHexCount)\n            result.r = r\n        result\n    drawHex: (centerX, centerY) ->\n        drawNode = new cc.DrawNode\n        _drawHex drawNode, @calculateHex centerX, centerY\n\n    drawHexesGrid: (hexes) ->\n        hexes = hexes || @hexes\n        drawNode = new cc.DrawNode\n        for k of hexes\n            _drawHex drawNode, hexes[k] if hexes.hasOwnProperty k\n        return drawNode\n    drawHexesGridNumbers: (hexes, node, zOrder) ->\n        hexes = hexes || @hexes\n        for k of hexes\n            if hexes.hasOwnProperty k\n                hexLabel = new cc.LabelTTF(\"#{hexes[k].q}, #{hexes[k].r}\", \"Arial\", 10)\n                hexLabel.setColor(cc.color(0, 0, 255));\n                hexLabel.x = hexes[k].centerX\n                hexLabel.y = hexes[k].centerY\n                node.addChild hexLabel, zOrder\n\n#TODO (S.Panfilov) may be instead of @ at addListener func, we should set target (some kind of input elem or smt)\nclass KeyboardHelper\n    isKeyboardExist: ->\n        cc.sys.capabilities.hasOwnProperty 'keyboard'\n    getCurrentTarget: (event) ->\n        event.getCurrentTarget();\n    addKeyboardListener: ->\n        cc.eventManager.addListener\n            event: cc.EventListener.KEYBOARD\n            onKeyPressed: (keyCode, event) ->\n                label = event.getCurrentTarget();\n                label.setString \"Key #{keyCode.toString()} was pressed!\"\n            onKeyReleased: (keyCode, event) ->\n                label = event.getCurrentTarget();\n                label.setString \"Key #{keyCode.toString()} was relesed!\"\n        , @\n'use strict' #do not remove (never!)\n\nBackgroundLayer = cc.Layer.extend\n    ctor: ->\n        @_super()\n        @init()\n\n    init: ->\n        @_super()\n\n        size = cc.winSize\n        @maxWidth = cc.director.getWinSizeInPixels().width\n        @maxHeight = cc.director.getWinSizeInPixels().height\n\n        helloLabel = new cc.LabelTTF(\"Hello Worlds\", \"Arial\", 38)\n        helloLabel.x = size.width / 2\n        helloLabel.y = 100\n        @addChild helloLabel, 5\n\n        hexSizePx = 35\n        HexUtils::setHexesConfig hexSizePx\n        MouseHelper::onLeftMouse @, (x, y) =>\n            polyNode = HexUtils::drawHex x, y\n            @addChild polyNode, 5\n\n        hexesInRow = 10\n        hexesInCol = 10\n        MouseHelper::onRightMouse @, (x, y) =>\n            hexesGrid = HexUtils::generateHexesGrid x, y, hexesInRow, hexesInCol\n            polyNode =  HexUtils::drawHexesGrid hexesGrid\n            @addChild polyNode, 5\n            HexUtils::drawHexesGridNumbers hexesGrid, @, 5\n\n        @scheduleUpdate()\n    update: ->\n        #update called every frame after @scheduleUpdate called\n\nStartupScene = cc.Scene.extend onEnter: ->\n    @_super()\n    @addChild new BackgroundLayer()\n    return\nclass MouseHelper\n    isMouseExist: ->\n        cc.sys.capabilities.hasOwnProperty 'mouse'\n    onLeftMouse: (target, callbackDown, callbackUp) ->\n        cc.eventManager.addListener\n            event: cc.EventListener.MOUSE\n            onMouseDown: (event) ->\n                if (event.getButton() is cc.EventMouse.BUTTON_LEFT)\n                    callbackDown event.getLocationX(), event.getLocationY() if callbackDown\n                    cc.log \"Left mouse button pressed at #{event.getLocationX()}\"\n            onMouseUp: (event) ->\n                if (event.getButton() is cc.EventMouse.BUTTON_LEFT)\n                    callbackUp event.getLocationX(), event.getLocationY() if callbackUp\n                    cc.log \"Left mouse button released at #{event.getLocationX()}\" if (event.getButton() is cc.EventMouse.BUTTON_LEFT)\n        , target\n    onRightMouse: (target, callbackDown, callbackUp) ->\n        cc.eventManager.addListener\n            event: cc.EventListener.MOUSE\n            onMouseDown: (event) ->\n                if (event.getButton() is cc.EventMouse.BUTTON_RIGHT)\n                    callbackDown event.getLocationX(), event.getLocationY() if callbackDown\n                    cc.log \"Right mouse button pressed at #{event.getLocationX()}\"\n            onMouseUp: (event) ->\n                if (event.getButton() is cc.EventMouse.BUTTON_RIGHT)\n                    callbackUp event.getLocationX(), event.getLocationY() if callbackUp\n                    cc.log \"Right mouse button released at #{event.getLocationX()}\" if (event.getButton() is cc.EventMouse.BUTTON_LEFT)\n        , target\nclass ObjectsUtils\n    getS4: ->\n        Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1)\n    getRandomId: ->\n        \"#{@getS4()}#{@getS4()}-#{@getS4()}-#{@getS4()}-#{@getS4()}-#{@getS4()}#{@getS4()}#{@getS4()}\"\n    getCustomPostfixId: (postfix)->\n        \"#{@getRandomId()}_#{postfix}\"\nres =\n    sprite_png: \"res/sprite.png\"\n    sprite_plist: \"res/sprite.plist\"\n    running_png: \"res/running.png\"\n    running_plist: \"res/running.plist\"\n    demo_lvl_bg_png: \"res/tiles/demo_lvl_bg.png\"\n    demo_lvl_bg_tmx: \"res/tiles/demo_lvl_bg.tmx\"\n\ng_resources = []\nfor i of res\n    g_resources.push res[i] if res.hasOwnProperty i\nclass TouchHelper\n    isTouchesExist: ->\n        cc.sys.capabilities.hasOwnProperty 'touches'\n    addOneTouchListener: ->\n        cc.eventManager.addListener\n            event: cc.EventListener.TOUCH_ONE_BY_ONE\n            onTouchBegan: (touch, event) ->\n                target = event.getCurrentTarget()\n                locationInNode = target.convertToNodeSpace touch.getLocation()\n                size = target.getContentSize()\n\n                cc.log \"Touch began at #{touch.getLocationX()}, target: #{target}, locationInNode: #{locationInNode}, size: #{size}\"\n            onTouchMoved: (touch, event) ->\n                target = event.getCurrentTarget();\n                delta = touch.getDelta();\n\n                cc.log \"Touch moved #{touch.getLocationX()}, target: #{target}, delta: #{delta}\"\n            onTouchEnded: (touch, ended) ->\n                cc.log \"Touch ended #{touch.getLocationX()}\"\n            onTouchCancelled: (touch, event) ->\n                cc.log \"Touch cancelled #{touch.getLocationX()}\"\n        , @\n    addMultiTouchListener: ->\n        cc.eventManager.addListener\n            event: cc.EventListener.TOUCH_ALL_AT_ONCE\n            onTouchesBegan: (touches, event) ->\n                cc.log \"Touches began #{touches[0].getLocationX()}\"\n                cc.log \"Touches began #{touches[1].getLocationX()}\"\n            onTouchesMoved: (touches, event) ->\n                cc.log \"Touches moved #{touches[2].getLocationX()}\"\n        , @"]}